import java.awt.MultipleGradientPaint.CycleMethod;

public class Vigenere 
{
	public static String vigenere(String key, String word)
	{		
		/*System.out.println("==================");
		
		int temp = (('z'%97 + 'z'%97)%26)+97;
		
		System.out.println(temp);
		System.out.println((char)temp);
		
		System.out.println("==================");*/
		
		String toReturn = new String();
		
		int indexKey = 0;
		for(int i = 0; i < word.length(); i++)
		{
			char tempChar = 'a';
			//C'est une lettre
			if(word.charAt(i) <= 'z' && word.charAt(i) >= 'a' || word.charAt(i) <= 'Z' && word.charAt(i) >= 'A')
			{
			//ça crypte 
			char letterWord = word.charAt(i);
			boolean isUpperCase = Character.isUpperCase(letterWord);
			int letterKey = key.charAt(i%key.length());
			
			letterWord = Character.toLowerCase(letterWord);
			
			tempChar = (char)((((letterWord + letterKey)%97)%26)+97);
			
			if(isUpperCase)  
				tempChar = Character.toUpperCase(tempChar);
			
			}
			else//Ce n'est pas une lettre
			{
				
			}
			toReturn += tempChar;
		}
		return toReturn;
	}
	
	public static String decrypt(String key, String word)
	{
		String toReturn = new String();
		for(int i = 0; i < word.length(); i++)
		{
			//ça décrypte 
			char letterWord = word.charAt(i);
			boolean isUpperCase = Character.isUpperCase(letterWord);
			int letterKey = key.charAt(i%key.length());
			
			letterWord = Character.toLowerCase(letterWord);
			
			char tempChar = (char)(((Math.floorMod((letterWord - letterKey), 26))%97)+97);
			
			if(isUpperCase)  
				tempChar = Character.toUpperCase(tempChar);
			
			toReturn += tempChar;
		}
		return toReturn;
	}
	
	public static void main(String[] args) 
	{
		String word  = "Word and word and mAchIn dans le truc";
		String cryptedWord = vigenere("key",word);
		System.out.println(word+" -> "+ cryptedWord);
		
		System.out.println("=========================");
		
		String decryptedWord = decrypt("key", cryptedWord);
		System.out.println(cryptedWord+" -> "+decryptedWord);
	}
}
