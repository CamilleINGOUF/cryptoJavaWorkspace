import java.awt.MultipleGradientPaint.CycleMethod;

public class Vigenere 
{
	public static String vigenere(String key, String word)
	{
		//Read char by char the key and the word
		for(char c : key.toCharArray())
			System.out.println(c);
		
		System.out.println();
		
		for(char c : word.toCharArray())
			System.out.println(c);
		
		System.out.println("==================");
		
		int temp = (('z'%97 + 'z'%97)%26)+97;
		
		System.out.println(temp);
		System.out.println((char)temp);
		
		System.out.println("==================");
		
		String toReturn = new String();
		
		for(int i = 0; i < word.length(); i++)
		{
			//ça crypte 
			int letterWord = word.charAt(i);
			int letterKey = key.charAt(i%key.length());
			
			toReturn += (char)((((letterWord + letterKey)%97)%26)+97);
			
		}
		return toReturn;
	}
	
	public static String decrypt(String key, String word)
	{
		String toReturn = new String();
		for(int i = 0; i < word.length(); i++)
		{
			//ça crypte 
			int letterWord = word.charAt(i);
			int letterKey = key.charAt(i%key.length());
			
			toReturn += (char)(((Math.floorMod((letterWord - letterKey), 26))%97)+97);
		}
		return toReturn;
	}
	
	public static void main(String[] args) 
	{
		String cryptedWord = vigenere("key","word");
		System.out.println("word -> "+ cryptedWord);
		
		System.out.println("=========================");
		
		String decryptedWord = decrypt("key", cryptedWord);
		System.out.println(cryptedWord+" -> "+decryptedWord);
	}
}
